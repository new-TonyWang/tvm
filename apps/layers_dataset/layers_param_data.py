from generate_param_value import *
"""
保存了所有算子的参数和其值的生成函数的对应关系，如果不需要增加新算子则不需要修改
"""
global_table={
'LeakyReLU': {'self': None,
               'alpha': get_value,
               'kwargs': None},
               
 'PReLU': {'self': None,
           'alpha_initializer': 'zeros',
           'alpha_regularizer': None,
           'alpha_constraint': None,
           'shared_axes': get_shared_axes,
           'kwargs': None},

 'ELU': {'self': None,
         'alpha': get_value,#1.0
         'kwargs': None},

 'ThresholdedReLU': {'self': None,
                     'theta': get_value,#1.0
                     'kwargs': None},
 'Softmax': {'self': None,
             'axis': get_axis,#-1
             'kwargs': None},

 'Conv1D': {'self': None,
            'filters': get_filters,
            'kernel_size': kernel_size_dispatch,
            'strides': get_stride_or_dilation_rate_pool_size,
            'padding': get_padding,
            'data_format': get_data_format,
            'dilation_rate': get_stride_or_dilation_rate_pool_size,
            'groups': get_group,
            'activation': get_activation,
            'use_bias': get_bool,
            'kernel_initializer': 'glorot_uniform',
            'bias_initializer': 'zeros',
            'kernel_regularizer': None,
            'bias_regularizer': None,
            'activity_regularizer': None,
            'kernel_constraint': None,
            'bias_constraint': None,
            'kwargs': None},
 'Conv2D': {'self': None,
            'filters': get_filters,
            'kernel_size': kernel_size_dispatch,
            'strides': get_strides2D_and_dilation_rate_pool_size,
            'padding': get_padding,
            'data_format': get_data_format,
            'dilation_rate': get_strides2D_and_dilation_rate_pool_size,
            'groups': get_group,
            'activation': get_activation,
            'use_bias': get_bool,
            'kernel_initializer': 'glorot_uniform',
            'bias_initializer': 'zeros',
            'kernel_regularizer': None,
            'bias_regularizer': None,
            'activity_regularizer': None,
            'kernel_constraint': None,
            'bias_constraint': None,
            'kwargs': None},

 'Conv3D': {'self': None,
            'filters': get_filters,
            'kernel_size': kernel_size_dispatch,
            'strides': get_strides3D_and_dilation_rate_pool_size,
            'padding': get_padding,
            'data_format': get_data_format,
            'dilation_rate': get_strides3D_and_dilation_rate_pool_size,
            'groups': get_group,
            'activation': get_activation,
            'use_bias': get_bool,
            'kernel_initializer': 'glorot_uniform',
            'bias_initializer': 'zeros',
            'kernel_regularizer': None,
            'bias_regularizer': None,
            'activity_regularizer': None,
            'kernel_constraint': None,
            'bias_constraint': None,
            'kwargs': None},

 'Conv1DTranspose': {'self': None,
                     'filters': get_filters,
                     'kernel_size': kernel_size_dispatch,
                     'strides': get_stride_or_dilation_rate_pool_size,
                     'padding': get_padding,
                     'output_padding': output_padding_dispatch_for_Transpose,
                     'data_format': get_data_format,
                     'dilation_rate': get_stride_or_dilation_rate_pool_size,
                     'activation': get_activation,
                     'use_bias': get_bool,
                     'kernel_initializer': 'glorot_uniform',
                     'bias_initializer': 'zeros',
                     'kernel_regularizer': None,
                     'bias_regularizer': None,
                     'activity_regularizer': None,
                     'kernel_constraint': None,
                     'bias_constraint': None,
                     'kwargs': None},

 'Conv2DTranspose': {'self': None,
                     'filters': get_filters,
                     'kernel_size': kernel_size_dispatch,
                     'strides':get_strides2D_and_dilation_rate_pool_size,
                     'padding': get_padding,
                     'output_padding': output_padding_dispatch_for_Transpose,
                     'data_format': get_data_format,
                     'dilation_rate': get_strides2D_and_dilation_rate_pool_size,
                     'activation': get_activation,
                     'use_bias': get_bool,
                     'kernel_initializer': 'glorot_uniform',
                     'bias_initializer': 'zeros',
                     'kernel_regularizer': None,
                     'bias_regularizer': None,
                     'activity_regularizer': None,
                     'kernel_constraint': None,
                     'bias_constraint': None,
                     'kwargs': None},

 'Conv3DTranspose': {'self': None,
                     'filters': get_filters,
                     'kernel_size': kernel_size_dispatch,
                     'strides':get_strides3D_and_dilation_rate_pool_size,
                     'padding': get_padding,
                     'output_padding': output_padding_dispatch_for_Transpose,
                     'data_format': get_data_format,
                     'dilation_rate': get_strides3D_and_dilation_rate_pool_size,
                     'activation': get_activation,
                     'use_bias': get_bool,
                     'kernel_initializer': 'glorot_uniform',
                     'bias_initializer': 'zeros',
                     'kernel_regularizer': None,
                     'bias_regularizer': None,
                     'activity_regularizer': None,
                     'kernel_constraint': None,
                     'bias_constraint': None,
                     'kwargs': None},

 'SeparableConv1D': {'self': None,
                     'filters': get_filters,
                     'kernel_size': kernel_size_dispatch,
                     'strides': get_stride_or_dilation_rate_pool_size,
                     'padding': get_padding,
                     'data_format': get_data_format,
                     'dilation_rate': get_stride_or_dilation_rate_pool_size,
                     'depth_multiplier': get_depth_multiplier,
                     'activation': get_activation,
                     'use_bias': get_bool,
                     'depthwise_initializer': 'glorot_uniform',
                     'pointwise_initializer': 'glorot_uniform',
                     'bias_initializer': 'zeros',
                     'depthwise_regularizer': None,
                     'pointwise_regularizer': None,
                     'bias_regularizer': None,
                     'activity_regularizer': None,
                     'depthwise_constraint': None,
                     'pointwise_constraint': None,
                     'bias_constraint': None,
                     'kwargs': None},

 'SeparableConv2D': {'self': None,
                     'filters': get_filters,
                     'kernel_size': kernel_size_dispatch,
                     'strides': get_strides2D_and_dilation_rate_pool_size,
                     'padding': get_padding,
                     'data_format': get_data_format,
                     'dilation_rate': get_strides2D_and_dilation_rate_pool_size,
                     'depth_multiplier': get_depth_multiplier,
                     'activation': get_activation,
                     'use_bias': get_bool,
                     'depthwise_initializer': 'glorot_uniform',
                     'pointwise_initializer': 'glorot_uniform',
                     'bias_initializer': 'zeros',
                     'depthwise_regularizer': None,
                     'pointwise_regularizer': None,
                     'bias_regularizer': None,
                     'activity_regularizer': None,
                     'depthwise_constraint': None,
                     'pointwise_constraint': None,
                     'bias_constraint': None,
                     'kwargs': None},

 'DepthwiseConv2D': {'self': None,
                     'kernel_size': kernel_size_dispatch,
                     'strides': get_strides2D_and_dilation_rate_pool_size,
                     'padding': get_padding,
                     'depth_multiplier':get_depth_multiplier,
                     'data_format': get_data_format,
                     'dilation_rate':get_strides2D_and_dilation_rate_pool_size,
                     'activation': get_activation,
                     'use_bias': get_bool,
                     'depthwise_initializer': 'glorot_uniform',
                     'bias_initializer': 'zeros',
                     'depthwise_regularizer': None,
                     'bias_regularizer': None,
                     'activity_regularizer': None,
                     'depthwise_constraint': None,
                     'bias_constraint': None,
                     'kwargs': None},

 'UpSampling1D': {'self': None,
                  'size': get_size1D_and_padding,
                  'kwargs': None},

 'UpSampling2D': {'self': None,
                  'size': get_size2D_and_padding,
                  'data_format': get_data_format,
                  'interpolation': get_interpolation,
                  'kwargs': None},

 'UpSampling3D': {'self': None,
                  'size': get_size3D_and_padding,
                  'data_format': get_data_format,
                  'kwargs': None},
 'ZeroPadding1D': {'self': None,
                   'padding': get_size1D_and_padding,
                   'kwargs': None},

 'ZeroPadding2D': {'self': None,
                   'padding': get_size2D_and_padding,
                   'data_format': get_data_format,
                   'kwargs': None},

 'ZeroPadding3D': {'self': None,
                   'padding':get_size3D_and_padding,
                   'data_format': get_data_format,
                   'kwargs': None},

 'Cropping1D': {'self': None,
                'cropping':get_croping1D,
                'kwargs': None},

 'Cropping2D': {'self': None,
                'cropping': get_croping2D,
                'data_format': get_data_format,
                'kwargs': None},

 'Cropping3D': {'self': None,
                'cropping': get_croping3D,
                'data_format': get_data_format,
                'kwargs': None},

 'Masking': {'self': None,
             'mask_value': get_value,
             'kwargs': None},

#  'Dropout': {'self': None,
#              'rate': None,
#              'noise_shape': None,
#              'seed': None,
#              'kwargs': None},

#  'SpatialDropout1D': {'self': None,
#                       'rate': None,
#                       'kwargs': None},
#  'SpatialDropout2D': {'self': None,
#                       'rate': None,
#                       'data_format': None,
#                       'kwargs': None},
#  'SpatialDropout3D': {'self': None,
#                       'rate': None,
#                       'data_format': None,
#                       'kwargs': None},

 'Activation': {'self': None,
                'activation': get_activation,
                'kwargs': None},
 'Reshape': {'self': None,
             'target_shape': get_target_shape,
             'kwargs': None},

 'Permute': {'self': None,
             'dims': get_next_permute,
             'kwargs': None},

 'Flatten': {'self': None,
             'data_format': get_data_format,
             'kwargs': None},

 'RepeatVector': {'self': None,
                  'n': get_value,
                  'kwargs': None},

#  'Lambda': {'self': None,
#             'function': None,
#             'output_shape': None,
#             'mask': None,
#             'arguments': None,
#             'kwargs': None},

 'Dense': {'self': None,
           'units': get_units,
           'activation': get_activation,
           'use_bias': get_bool,
           'kernel_initializer': 'glorot_uniform',
           'bias_initializer': 'zeros',
           'kernel_regularizer': None,
           'bias_regularizer': None,
           'activity_regularizer': None,
           'kernel_constraint': None,
           'bias_constraint': None,
           'kwargs': None},

 'ActivityRegularization': {'self': None,
                            'l1': get_value,
                            'l2': get_value,
                            'kwargs': None},

 'AdditiveAttention': {'self': None,
                       'use_scale': True,
                       'kwargs': None},

 'Attention': {'self': None,
               'use_scale': get_bool,
               'kwargs': None},

 'Embedding': {'self': None,
               'input_dim': get_value,
               'output_dim': get_value,
               'embeddings_initializer': 'uniform',
               'embeddings_regularizer': None,
               'activity_regularizer': None,
               'embeddings_constraint': None,
               'mask_zero': get_bool,
               'input_length': get_value,
               'kwargs': None},

 'LocallyConnected1D': {'self': None,
                        'filters': get_filters,
                        'kernel_size': kernel_size_dispatch,
                        'strides': get_stride_or_dilation_rate_pool_size,
                        'padding': get_padding,
                        'data_format': get_data_format,
                        'activation': get_activation,
                        'use_bias': get_bool,
                        'kernel_initializer': 'glorot_uniform',
                        'bias_initializer': 'zeros',
                        'kernel_regularizer': None,
                        'bias_regularizer': None,
                        'activity_regularizer': None,
                        'kernel_constraint': None,
                        'bias_constraint': None,
                        'implementation': get_implementation,
                        'kwargs': None},

 'LocallyConnected2D': {'self': None,
                        'filters': get_filters,
                        'kernel_size': kernel_size_dispatch,
                        'strides': get_strides2D_and_dilation_rate_pool_size,
                        'padding': get_padding,
                        'data_format': get_data_format,
                        'activation': get_activation,
                        'use_bias': get_bool,
                        'kernel_initializer': 'glorot_uniform',
                        'bias_initializer': 'zeros',
                        'kernel_regularizer': None,
                        'bias_regularizer': None,
                        'activity_regularizer': None,
                        'kernel_constraint': None,
                        'bias_constraint': None,
                        'implementation': get_implementation,
                        'kwargs': None},
 'Add': {'self': None,
         'kwargs': None},

 'Subtract': {'self': None,
              'kwargs': None},

 'Multiply': {'self': None,
              'kwargs': None},

 'Average': {'self': None,
             'kwargs': None},

 'Maximum': {'self': None,
             'kwargs': None},

 'Minimum': {'self': None,
             'kwargs': None},

 'Concatenate': {'self': None,
                 'axis': get_axis,#-1
                 'kwargs': None},

 'Dot': {'self': None,
         'axes': get_axes,
         'normalize': get_bool,
         'kwargs': None},

 'add': {'args': None,
         'kwargs': None},

 'subtract': {'args': None,
              'kwargs': None},

 'multiply': {'args': None,
              'kwargs': None},

 'average': {'args': None,
             'kwargs': None},

 'maximum': {'args': None,
             'kwargs': None},
             
 'minimum': {'args': None,
             'kwargs': None},

 'concatenate': {'args': None,
                 'kwargs': None},

 'dot': {'args': None,
         'kwargs': None},

#  'AlphaDropout': {'self': None,
#                   'rate': None,
#                   'noise_shape': None,
#                   'seed': None,
#                   'kwargs': None},

 'GaussianNoise': {'self': None,
                   'stddev': get_value,
                   'kwargs': None},

 'GaussianDropout': {'self': None,
                     'rate': get_value,
                     'kwargs': None},

 'LayerNormalization': {'self': None,
                        'axis': get_axis,#-1
                        'epsilon': get_epsilon,#0.001
                        'center': get_bool,
                        'scale': get_bool,
                        'beta_initializer': 'zeros',
                        'gamma_initializer': 'ones',
                        'beta_regularizer': None,
                        'gamma_regularizer': None,
                        'beta_constraint': None,
                        'gamma_constraint': None,
                        'trainable': True,
                        'name': None,
                        'kwargs': None},

 'BatchNormalization': {'self': None,
                        'axis': get_axis,#-1
                        'momentum': get_value,#0.99
                        'epsilon': get_epsilon,#0.001
                        'center': get_bool,
                        'scale': get_bool,
                        'beta_initializer': 'zeros',
                        'gamma_initializer': 'ones',
                        'moving_mean_initializer': 'zeros',
                        'moving_variance_initializer': 'ones',
                        'beta_regularizer': None,
                        'gamma_regularizer': None,
                        'beta_constraint': None,
                        'gamma_constraint': None,
                        'renorm': get_bool,
                        'renorm_clipping': None,
                        'renorm_momentum': get_value,#0.99
                        'fused': None,
                        'trainable': True,
                        'virtual_batch_size': None,
                        'adjustment': None,
                        'name': None,
                        'kwargs': None},

 'MaxPooling1D': {'self': None,
                  'pool_size': get_stride_or_dilation_rate_pool_size,
                  'strides': get_stride_or_dilation_rate_pool_size,
                  'padding': get_padding,
                  'data_format': get_data_format,
                  'kwargs': None},

 'MaxPooling2D': {'self': None,
                  'pool_size': get_strides2D_and_dilation_rate_pool_size,
                  'strides': get_strides2D_and_dilation_rate_pool_size,
                  'padding':get_padding,
                  'data_format': get_data_format,
                  'kwargs': None},

 'MaxPooling3D': {'self': None,
                  'pool_size':get_strides3D_and_dilation_rate_pool_size,
                  'strides': get_strides3D_and_dilation_rate_pool_size,
                  'padding': get_padding,
                  'data_format': get_data_format,
                  'kwargs': None},

 'AveragePooling1D': {'self': None,
                      'pool_size': get_stride_or_dilation_rate_pool_size,
                      'strides': get_stride_or_dilation_rate_pool_size,
                      'padding': get_padding,
                      'data_format': get_data_format,
                      'kwargs': None},

 'AveragePooling2D': {'self': None,
                      'pool_size': get_strides2D_and_dilation_rate_pool_size,
                      'strides': get_strides2D_and_dilation_rate_pool_size,
                      'padding': get_padding,
                      'data_format': get_data_format,
                      'kwargs': None},
                      
 'AveragePooling3D': {'self': None,
                      'pool_size': get_strides3D_and_dilation_rate_pool_size,
                      'strides': get_strides3D_and_dilation_rate_pool_size,
                      'padding': get_padding,
                      'data_format': get_data_format,
                      'kwargs': None},

 'GlobalAveragePooling1D': {'self': None,
                            'data_format': get_data_format,
                            'kwargs': None},

 'GlobalAveragePooling2D': {'self': None,
                            'data_format': get_data_format,
                            'kwargs': None},

 'GlobalAveragePooling3D': {'self': None,
                            'data_format': get_data_format,
                            'kwargs': None},

 'GlobalMaxPooling1D': {'self': None,
                        'data_format': get_data_format,
                        'kwargs': None},

 'GlobalMaxPooling2D': {'self': None,
                        'data_format': get_data_format,
                        'kwargs': None},

 'GlobalMaxPooling3D': {'self': None,
                        'data_format': get_data_format,
                        'kwargs': None},
#  'RNN': {'self': None,
#          'cell': None,
#          'return_sequences': False,
#          'return_state': False,
#          'go_backwards': False,
#          'stateful': False,
#          'unroll': False,
#          'time_major': False,
#          'kwargs': None},

#  'AbstractRNNCell': {'self': None,
#                      'trainable': True,
#                      'name': None,
#                      'dtype': None,
#                      'dynamic': get_bool,
#                      'kwargs': None},

#  'StackedRNNCells': {'self': None,
#                      'cells': None,
#                      'kwargs': None},

#  'SimpleRNNCell': {'self': None,
#                    'units': None,
#                    'activation': 'tanh',
#                    'use_bias': True,
#                    'kernel_initializer': 'glorot_uniform',
#                    'recurrent_initializer': 'orthogonal',
#                    'bias_initializer': 'zeros',
#                    'kernel_regularizer': None,
#                    'recurrent_regularizer': None,
#                    'bias_regularizer': None,
#                    'kernel_constraint': None,
#                    'recurrent_constraint': None,
#                    'bias_constraint': None,
#                    'dropout': 0.0,
#                    'recurrent_dropout': 0.0,
#                    'kwargs': None},

 'SimpleRNN': {'self': None,
               'units': get_units,
               'activation': get_activation,
               'use_bias': get_bool,
               'kernel_initializer': 'glorot_uniform',
               'recurrent_initializer': 'orthogonal',
               'bias_initializer': 'zeros',
               'kernel_regularizer': None,
               'recurrent_regularizer': None,
               'bias_regularizer': None,
               'activity_regularizer': None,
               'kernel_constraint': None,
               'recurrent_constraint': None,
               'bias_constraint': None,
               'dropout': get_value,
               'recurrent_dropout':get_value,
               'return_sequences': get_bool,
               'return_state': get_bool,
               'go_backwards': get_bool,
               'stateful': get_bool,
               'unroll': get_bool,
               'kwargs': None},

 'GRU': {'self': None,
         'units': get_units,
         'activation': get_activation,
         'recurrent_activation': get_activation,
         'use_bias': get_bool,
         'kernel_initializer': 'glorot_uniform',
         'recurrent_initializer': 'orthogonal',
         'bias_initializer': 'zeros',
         'kernel_regularizer': None,
         'recurrent_regularizer': None,
         'bias_regularizer': None,
         'activity_regularizer': None,
         'kernel_constraint': None,
         'recurrent_constraint': None,
         'bias_constraint': None,
         'dropout': get_bool,
         'recurrent_dropout': get_bool,
         'implementation': get_implementation,
         'return_sequences': get_bool,
         'return_state': get_bool,
         'go_backwards': get_bool,
         'stateful': get_bool,
         'unroll': get_bool,
         'time_major': get_bool,
         'reset_after': get_bool,
         'kwargs': None},

#  'GRUCell': {'self': None,
#              'units': None,
#              'activation': 'tanh',
#              'recurrent_activation': 'sigmoid',
#              'use_bias': True,
#              'kernel_initializer': 'glorot_uniform',
#              'recurrent_initializer': 'orthogonal',
#              'bias_initializer': 'zeros',
#              'kernel_regularizer': None,
#              'recurrent_regularizer': None,
#              'bias_regularizer': None,
#              'kernel_constraint': None,
#              'recurrent_constraint': None,
#              'bias_constraint': None,
#              'dropout': 0.0,
#              'recurrent_dropout': 0.0,
#              'implementation': 2,
#              'reset_after': True,
#              'kwargs': None},

 'LSTM': {'self': None,
          'units': get_units,
          'activation': get_activation,
          'recurrent_activation': get_activation,
          'use_bias': get_bool,
          'kernel_initializer': 'glorot_uniform',
          'recurrent_initializer': 'orthogonal',
          'bias_initializer': 'zeros',
          'unit_forget_bias': get_bool,
          'kernel_regularizer': None,
          'recurrent_regularizer': None,
          'bias_regularizer': None,
          'activity_regularizer': None,
          'kernel_constraint': None,
          'recurrent_constraint': None,
          'bias_constraint': None,
          'dropout':get_value,
          'recurrent_dropout':get_value,
          'implementation': get_implementation,
          'return_sequences': get_bool,
          'return_state': get_bool,
          'go_backwards': get_bool,
          'stateful': get_bool,
          'time_major': get_bool,
          'unroll': get_bool,
          'kwargs': None},

#  'LSTMCell': {'self': None,
#               'units': None,
#               'activation': 'tanh',
#               'recurrent_activation': 'sigmoid',
#               'use_bias': True,
#               'kernel_initializer': 'glorot_uniform',
#               'recurrent_initializer': 'orthogonal',
#               'bias_initializer': 'zeros',
#               'unit_forget_bias': True,
#               'kernel_regularizer': None,
#               'recurrent_regularizer': None,
#               'bias_regularizer': None,
#               'kernel_constraint': None,
#               'recurrent_constraint': None,
#               'bias_constraint': None,
#               'dropout': 0.0,
#               'recurrent_dropout': 0.0,
#               'implementation': 2,
#               'kwargs': None},

#  'ConvLSTM2D': {'self': None,
#                 'filters': None,
#                 'kernel_size': None,
#                 'strides': (1,
#                             1),
#                 'padding': 'valid',
#                 'data_format': None,
#                 'dilation_rate': (1,
#                                   1),
#                 'activation': 'tanh',
#                 'recurrent_activation': 'hard_sigmoid',
#                 'use_bias': True,
#                 'kernel_initializer': 'glorot_uniform',
#                 'recurrent_initializer': 'orthogonal',
#                 'bias_initializer': 'zeros',
#                 'unit_forget_bias': True,
#                 'kernel_regularizer': None,
#                 'recurrent_regularizer': None,
#                 'bias_regularizer': None,
#                 'activity_regularizer': None,
#                 'kernel_constraint': None,
#                 'recurrent_constraint': None,
#                 'bias_constraint': None,
#                 'return_sequences': False,
#                 'return_state': False,
#                 'go_backwards': False,
#                 'stateful': False,
#                 'dropout': 0.0,
#                 'recurrent_dropout': 0.0,
#                 'kwargs': None}
}
